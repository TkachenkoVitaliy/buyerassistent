DROP TABLE IF EXISTS role;
DROP TABLE IF EXISTS usr;
DROP TABLE IF EXISTS usr_role;


CREATE TABLE IF NOT EXISTS saved_files_table
(
    id    BIGINT PRIMARY KEY ,
    file_path VARCHAR (255) NOT NULL ,
    storage_file_name  VARCHAR(150) NOT NULL ,
    saved_timestamp TIMESTAMP(0) NOT NULL ,
    year  VARCHAR(4) NOT NULL ,
    month  VARCHAR(2) NOT NULL ,
    day  VARCHAR(2) NOT NULL ,
    time  VARCHAR(5) NOT NULL ,
    is_actual BOOLEAN
);
CREATE SEQUENCE IF NOT EXISTS hibernate_sequence START WITH 1 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS summary_table
(
    id    BIGINT PRIMARY KEY ,
    supplier VARCHAR(100) NOT NULL,
    mill INTEGER,
    branch VARCHAR(100),
    sell_type VARCHAR(10),
    client VARCHAR(100),
    consignee VARCHAR,
    product_type VARCHAR(30),
    profile VARCHAR(100),
    grade VARCHAR(100),
    ral VARCHAR(100),
    issued NUMERIC,
    contract VARCHAR(100),
    spec VARCHAR(100),
    position INTEGER,
    accept_month INTEGER,
    year INTEGER,
    accepted NUMERIC,
    price NUMERIC,
    accepted_cost NUMERIC,
    shipped NUMERIC,
    shipped_cost NUMERIC,
    shipped_date date,
    vehicle_number VARCHAR(100),
    invoice_number INTEGER,
    invoice_date date,
    final_price NUMERIC,
    final_cost NUMERIC,
    additional_req VARCHAR
);
CREATE SEQUENCE IF NOT EXISTS hibernate_sequence START WITH 1 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS accept_table
(
    id    BIGINT PRIMARY KEY,
    spec VARCHAR(50) NOT NULL ,
    position INTEGER NOT NULL ,
    nomenclature VARCHAR(200),
    grade VARCHAR(50),
    thickness NUMERIC,
    width NUMERIC,
    length NUMERIC,
    alter_profile VARCHAR(200),
    accepted NUMERIC,
    accept_month INTEGER,
    additional_requirements VARCHAR
);
CREATE SEQUENCE IF NOT EXISTS hibernate_sequence START WITH 1 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS dependency_table
(
    id    BIGINT PRIMARY KEY ,
    consignee VARCHAR,
    station VARCHAR(50),
    spec VARCHAR(50),
    position INTEGER,
    branch VARCHAR(50) NOT NULL,
    sell_type VARCHAR(10) NOT NULL,
    client VARCHAR(100),
    priority INTEGER
);
CREATE SEQUENCE IF NOT EXISTS hibernate_sequence START WITH 1 INCREMENT BY 1;


CREATE TABLE IF NOT EXISTS branches_settings_table
(
    id BIGINT generated by default as identity PRIMARY KEY ,
    name VARCHAR(25),
    start_month INTEGER,
    start_year INTEGER
);

CREATE TABLE IF NOT EXISTS mail_table
(
    id BIGINT generated by default as identity PRIMARY KEY ,
    branch_name VARCHAR(25),
    email_address VARCHAR(70)
);

-- CREATE TABLE IF NOT EXISTS usr
-- (
--     usr_id BIGINT generated by default as identity PRIMARY KEY ,
--     username VARCHAR(60) NOT NULL UNIQUE ,
--     password VARCHAR(64) NOT NULL
-- );
--
-- CREATE TABLE IF NOT EXISTS role
-- (
--     role_id BIGINT generated by default as identity PRIMARY KEY ,
--     name VARCHAR(20) NOT NULL UNIQUE
-- );
--
-- CREATE TABLE IF NOT EXISTS usr_role
-- (
--     usr_id BIGINT NOT NULL ,
--     role_id BIGINT NOT NULL ,
--     FOREIGN KEY (usr_id) REFERENCES usr (usr_id),
--     FOREIGN KEY (role_id) REFERENCES role (role_id)
-- );

CREATE TABLE IF NOT EXISTS product_group_table
(
    id BIGINT generated by default as identity PRIMARY KEY ,
    name VARCHAR(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS product_type_table
(
    id BIGINT generated by default as identity PRIMARY KEY ,
    name VARCHAR(50) UNIQUE,
    product_group_id BIGINT default 8,
    FOREIGN KEY (product_group_id) REFERENCES product_group_table (id)
);

CREATE TABLE IF NOT EXISTS total_settings
(
    id BIGINT generated by default as identity PRIMARY KEY ,
    username VARCHAR(60) NOT NULL UNIQUE ,
    month INTEGER,
    year INTEGER
);

CREATE TABLE IF NOT EXISTS roles
(
    id INTEGER generated by default as identity PRIMARY KEY ,
    name VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS users
(
    id       bigint generated by default as identity
        PRIMARY KEY ,
    email    VARCHAR(50)
        constraint uk6dotkott2kjsp8vw4d0m25fb7
            UNIQUE,
    password VARCHAR(120),
    username VARCHAR(30)
        constraint ukr43af9ap4edm43mmtq01oddj6
            UNIQUE
);

CREATE TABLE IF NOT EXISTS user_roles
(
    user_id BIGINT  NOT NULL
        constraint fkhfh9dx7w3ubf1co1vdev94g3f
            references users,
    role_id INTEGER NOT NULL
        constraint fkh8ciramu9cc9q3qcqiv4ue8a6
            references roles,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE IF NOT EXISTS letters_of_authorization_table
(
    id           BIGINT generated by default as identity PRIMARY KEY ,
    issued_date  DATE,
    number       INTEGER,
    sell_type    VARCHAR(255),
    valid_until  DATE,
    driver_id    BIGINT NOT NULL
        constraint fktb792blmbi7ymlqtf2dcmfok6
            references drivers_table,
    principal_id BIGINT NOT NULL
        constraint fko2o1bv0sv502kvejp4wmmbevr
            references principals_table,
    supplier_id  BIGINT NOT NULL
        constraint fkb692ojkqow36ke94i7ijn6u8d
            references suppliers_table
);

CREATE TABLE IF NOT EXISTS letter_rows_table
(
    id                         BIGINT generated by default as identity PRIMARY KEY ,
    number                     INTEGER,
    tonnage                    NUMERIC(19, 2),
    letter_of_authorization_id BIGINT
        constraint fkc54hg9f5udcyxluwoovdbau1e
            references letters_of_authorization_table
            ON DELETE CASCADE ,
    nomenclature_id            BIGINT
        constraint fk2gx8f4mnd0ega0ekkjfebu334
            references nomenclatures_table
);
